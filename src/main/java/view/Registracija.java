/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Djurkovic
 */
public class Registracija extends javax.swing.JDialog {

    public JButton getBtnRegistracija() {
        return btnRegistracija;
    }

    public void setBtnRegistracija(JButton btnRegistracija) {
        this.btnRegistracija = btnRegistracija;
    }

    public JLabel getLblEmail() {
        return lblEmail;
    }

    public void setLblEmail(JLabel lblEmail) {
        this.lblEmail = lblEmail;
    }

    public JLabel getLblEmailCheck() {
        return lblEmailCheck;
    }

    public void setLblEmailCheck(JLabel lblEmailCheck) {
        this.lblEmailCheck = lblEmailCheck;
    }

    public JLabel getLblIme() {
        return lblIme;
    }

    public void setLblIme(JLabel lblIme) {
        this.lblIme = lblIme;
    }

    public JLabel getLblPrezime() {
        return lblPrezime;
    }

    public void setLblPrezime(JLabel lblPrezime) {
        this.lblPrezime = lblPrezime;
    }

    public JLabel getLblRegistracija() {
        return lblRegistracija;
    }

    public void setLblRegistracija(JLabel lblRegistracija) {
        this.lblRegistracija = lblRegistracija;
    }

    public JLabel getLblSifra() {
        return lblSifra;
    }

    public void setLblSifra(JLabel lblSifra) {
        this.lblSifra = lblSifra;
    }

    public JLabel getLblSifraCheck() {
        return lblSifraCheck;
    }

    public void setLblSifraCheck(JLabel lblSifraCheck) {
        this.lblSifraCheck = lblSifraCheck;
    }

    public JLabel getLblSifraProvera() {
        return lblSifraProvera;
    }

    public void setLblSifraProvera(JLabel lblSifraProvera) {
        this.lblSifraProvera = lblSifraProvera;
    }

    public JLabel getLblSifraProveraCheck() {
        return lblSifraProveraCheck;
    }

    public void setLblSifraProveraCheck(JLabel lblSifraProveraCheck) {
        this.lblSifraProveraCheck = lblSifraProveraCheck;
    }

    public JTextField getTxtEmail() {
        return txtEmail;
    }

    public void setTxtEmail(JTextField txtEmail) {
        this.txtEmail = txtEmail;
    }

    public JTextField getTxtIme() {
        return txtIme;
    }

    public void setTxtIme(JTextField txtIme) {
        this.txtIme = txtIme;
    }

    public JTextField getTxtPrezime() {
        return txtPrezime;
    }

    public void setTxtPrezime(JTextField txtPrezime) {
        this.txtPrezime = txtPrezime;
    }

    public JPasswordField getTxtSifra() {
        return txtSifra;
    }

    public void setTxtSifra(JPasswordField txtSifra) {
        this.txtSifra = txtSifra;
    }

    public JPasswordField getTxtSifraProvera() {
        return txtSifraProvera;
    }

    public void setTxtSifraProvera(JPasswordField txtSifraProvera) {
        this.txtSifraProvera = txtSifraProvera;
    }

    public boolean isMailReq() {
        return mailReq;
    }

    public void setMailReq(boolean mailReq) {
        this.mailReq = mailReq;
    }

    public boolean isSifraReq() {
        return sifraReq;
    }

    public void setSifraReq(boolean sifraReq) {
        this.sifraReq = sifraReq;
    }

    public boolean isSifraProveraReq() {
        return sifraProveraReq;
    }

    public void setSifraProveraReq(boolean sifraProveraReq) {
        this.sifraProveraReq = sifraProveraReq;
    }
    

    /**
     * Creates new form Registracija
     */
    public Registracija(java.awt.Frame parent, boolean modal) {
        super(parent,modal);
        initComponents();
        dodajSliku();
        pripremiOsluskivace();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRegistracija = new javax.swing.JLabel();
        lblIme = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblSifra = new javax.swing.JLabel();
        lblSifraProvera = new javax.swing.JLabel();
        txtSifraProvera = new javax.swing.JPasswordField();
        txtSifra = new javax.swing.JPasswordField();
        txtEmail = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtIme = new javax.swing.JTextField();
        btnRegistracija = new javax.swing.JButton();
        lblEmailCheck = new javax.swing.JLabel();
        lblSifraCheck = new javax.swing.JLabel();
        lblSifraProveraCheck = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registracija");
        setResizable(false);

        lblRegistracija.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lblRegistracija.setText("Promena podataka");

        lblIme.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIme.setText("Ime:");

        lblPrezime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrezime.setText("Prezime:");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        lblSifra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSifra.setText("Stara šifra:");

        lblSifraProvera.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSifraProvera.setText("Šifra (Provera):");

        txtSifraProvera.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtSifra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtPrezime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtIme.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnRegistracija.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegistracija.setText("Registracija");

        lblEmailCheck.setForeground(new java.awt.Color(255, 51, 0));

        lblSifraCheck.setForeground(new java.awt.Color(255, 51, 0));

        lblSifraProveraCheck.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblSifraCheck)
                        .addGap(251, 251, 251))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblSifraProveraCheck)
                        .addGap(274, 274, 274))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegistracija)
                        .addGap(291, 291, 291))))
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrezime)
                            .addComponent(lblIme))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSifraProvera)
                            .addComponent(lblSifra)
                            .addComponent(lblEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSifraProvera, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(txtSifra)
                            .addComponent(txtEmail)))
                    .addComponent(lblEmailCheck, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(205, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRegistracija)
                .addGap(224, 224, 224))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblRegistracija)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(lblEmailCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSifra)
                    .addComponent(txtSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(lblSifraCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSifraProvera)
                    .addComponent(txtSifraProvera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSifraProveraCheck)
                .addGap(18, 18, 18)
                .addComponent(btnRegistracija)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistracija;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailCheck;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblRegistracija;
    private javax.swing.JLabel lblSifra;
    private javax.swing.JLabel lblSifraCheck;
    private javax.swing.JLabel lblSifraProvera;
    private javax.swing.JLabel lblSifraProveraCheck;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JPasswordField txtSifra;
    private javax.swing.JPasswordField txtSifraProvera;
    // End of variables declaration//GEN-END:variables
    private boolean mailReq = false;
    private boolean sifraReq = false;
    private boolean sifraProveraReq = false;

    private void pripremiOsluskivace() {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern p = Pattern.compile(emailRegex);
        btnRegistracija.setEnabled(false);
        DocumentListener dl = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkFields();
            }

            // Method to check if all fields are non-empty
            private void checkFields() {
                // Enable the button if all fields are non-empty
                if (!txtEmail.getText().isEmpty()
                        && !txtIme.getText().isEmpty()
                        && !txtPrezime.getText().isEmpty()
                        && !(new String(txtSifra.getPassword()).isEmpty())
                        && !(new String(txtSifraProvera.getPassword()).isEmpty())
                        && mailReq && sifraReq && sifraProveraReq) {
                    btnRegistracija.setEnabled(true);
                } else {
                    btnRegistracija.setEnabled(false);
                }
            }
        };
        DocumentListener sifraProveraListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                check();
            }

            // Method to check if all fields are non-empty
            private void check() {
                if (!(new String(txtSifra.getPassword()).equals(new String(txtSifraProvera.getPassword())))) {
                    lblSifraProveraCheck.setText("*Šifre se moraju poklapati.");
                    sifraProveraReq = false;
                } else {
                    lblSifraProveraCheck.setText("");
                    sifraProveraReq = true;
                }
            }
        };
        DocumentListener sifraListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                check();
            }

            // Method to check if all fields are non-empty
            private void check() {
                if (!(new String(txtSifra.getPassword()).isEmpty()) && new String(txtSifra.getPassword()).length() < 8) {
                    if (!(new String(txtSifra.getPassword()).isEmpty())) {
                        lblSifraCheck.setText("*Šifra mora imati barem 8 karaktera.");
                    }
                    sifraReq = false;
                } else {
                    lblSifraCheck.setText("");
                    sifraReq = true;
                }
            }
        };

        DocumentListener emailListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                check();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                check();
            }

            // Method to check if all fields are non-empty
            private void check() {
                if (!p.matcher(txtEmail.getText()).matches()) {
                    if (!txtEmail.getText().isEmpty()) {
                        lblEmailCheck.setText("*Unešen mejl mora biti validna email adresa.");
                    }
                    mailReq = false;
                } else {
                    lblEmailCheck.setText("");
                    mailReq = true;
                   
                }
            }
        };
        txtEmail.getDocument().addDocumentListener(dl);
        txtEmail.getDocument().addDocumentListener(emailListener);
        txtIme.getDocument().addDocumentListener(dl);
        txtPrezime.getDocument().addDocumentListener(dl);
        txtSifra.getDocument().addDocumentListener(dl);
        txtSifra.getDocument().addDocumentListener(sifraListener);
        txtSifra.getDocument().addDocumentListener(sifraProveraListener);
        txtSifraProvera.getDocument().addDocumentListener(dl);
        txtSifraProvera.getDocument().addDocumentListener(sifraProveraListener);
    }

    private void dodajSliku() {
        //crtanje slike iznad svih ostalih komponenti sa vrlo niskom transparentnoscu
        Slika fonLogo = new Slika(new ImageIcon(getClass().getResource("/resources/icon.png")).getImage(), 0.06f);
        getLayeredPane().add(fonLogo, JLayeredPane.PALETTE_LAYER);
        fonLogo.setBounds(0, 0, getWidth(), getHeight());
        fonLogo.setOpaque(false);
        fonLogo.setFocusable(false);
    }
    
    public static void main(String[] args) {
        new Registracija(null,false).setVisible(true);
    }
}
